#!/bin/bash

test $# -eq 0 && set -- -h

OPTS_SPEC="\
git subtree-export <subdir> <remote> [<branch>]
--
h,help        show the help
d,debug       show debug messages
"
eval "$(echo "$OPTS_SPEC" | git rev-parse --parseopt -- "$@" || echo exit $?)"

####################################################################################################

PATH=$PATH:$(git --exec-path)
. git-sh-setup

require_work_tree

####################################################################################################

debug() {
    if test -n "$debug"; then
        echo "$@" >&2
    fi
}

assert() {
    if "$@"; then
        :
    else
        die "assertion failed: " "$@"
    fi
}

####################################################################################################

quiet=
debug=

while [ $# -gt 0 ]; do
    opt="$1"; shift
    case "$opt" in
        -q) quiet=true ;;
        -d) debug=true ;;
        --) break ;;
        *) die "Unexpected option: $opt" ;;
    esac
done

####################################################################################################

subdir="${1%/}"
remote="$2"
branch="$3"

test -n "$subdir" || die "You must provide <subdir>."
test -n "$remote" || die "You must provide <remote>."
test -n "$branch" || branch=master

git config remote.$remote.url >/dev/null || die "Remote '$remote' does not exist. Please run 'git remote add $remote http://url/of/$remote'."

debug "git fetch $remote"
git fetch $remote

debug "git merge -s ours --no-commit $remote/$branch"
git merge -s ours --no-commit $remote/$branch

debug "git rm --cached --ignore-unmatch -r -q $subdir"
git rm --ignore-unmatch -r -q $subdir

debug "git read-tree --prefix=$subdir/ -u $remote/$branch"
git read-tree --prefix=$subdir/ -u $remote/$branch

git commit -m "Merge the latest version of $remote/$branch"
